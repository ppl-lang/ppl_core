///
   Copyright (C) 2009-2014 Christian Neumanns (www.practical-programming.org)
   This code can be used under the terms of the 'GNU Afero General Public License version 3'
   The full text of this license can be found at http://www.gnu.org/licenses/agpl.html
   THIS CODE IS DISTRIBUTED WITHOUT ANY WARRANTY. See the license for details.
end ///

service object

	function to_string_or_null ( object any ) -> string or null

        if i_object is null then
            return null
        else
            return i_object.to_string
        .
    .

	function to_string_or_null_string ( object any ) -> string

        if i_object is null then
            return se_string_constants.null
        else
            return i_object.to_string
        .
    .

	function to_long_string_or_null_string ( object any ) -> string
	
	    case type of object
	        when null
                return se_string_constants.null
            when has_to_long_string t
                return t.to_long_string
            when non_null t
                return t.to_string
        .
    .

	function to_long_string ( object non_null ) -> string
	
	    case type of object
            when has_to_long_string o
                return o.to_long_string
            otherwise
                return i_object.to_string
        .
    .

	function force_to_string ( object any ) -> string
	
	    try
	        return to_string_or_null_string ( object )
        catch_any
            return "error converting to string"
        .
    .
    
///
	function to_long_string ( object any ) -> string
		
		script
			const writer = memory_string_writer.create
			se_object_writer.write ( object, writer )
			result = writer.get_result
		.
		test
			test object = null
			verify result =v se_string_constants.null
			
			test object = "123"
			verify result =v "123"
			
			test object = [ "123", 123, null, 'a' ]
			verify result =v """123
123
{{se_string_constants.null}}
a"""
			
			test object = [ "a": 1, "b": 2 ]
			verify v_result.contains ( '''a=1
b=2''' )
			
			/// TD parse_string_or_throw
			test object = fa_date.create_from_valid_string ( "2014-08-11" )
			verify result =v '''            day: 11
          month: 8
           year: 2014'''
            .///
		.
	.
.///
.
