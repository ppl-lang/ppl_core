factory reflecting_validator_for_in_check \
    type: object_validator<object:list<any>, error:check_program_reflection_error>

    java_header
        import org.ppl.core.collections.java.se_Java_collection_converter;
        import org.ppl.core.reflection.introspection.java.se_Java_method_introspection;
        import org.ppl.core.reflection.execution.java.se_dynamic_Java_execution;
    end java_header

    attributes access: private
        TFS_path TFS_path
        command_id PPL_command_id
    .
    
    function validate

        const method_name = se_Java_method_introspection.in_check_method_name (
            command_id )
        assert method_name is not null // avoid 'not used' compiler warning
            
        variable error invalid_input_arguments_program_error or null
        java
            v_error = (ty_invalid_input_arguments_program_error) se_dynamic_Java_execution.invokeStaticClassMethod (
                a_TFS_path.getValue().getJavaString(),
                c_method_name.getJavaString(),
                se_Java_collection_converter.PPL_list_to_Java_Object_Array ( i_object ) );
        end java
        assert error may be null
        
        if error is null then
            return null
        else
            return fa_check_program_reflection_error.create_for_check_program_error ( error )
        .
    .
    

    // it is assumed that all input is valid
    creator create -> object_validator<object:list<any>, error:check_program_reflection_error>
        in TFS_path TFS_path
        in command_id PPL_command_id
        
        this.TFS_path = i_TFS_path
        this.command_id = i_command_id
        
        return this
    .
.
    