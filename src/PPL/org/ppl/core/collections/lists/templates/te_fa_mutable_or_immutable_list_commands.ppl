// SPDX-License-Identifier: GPL-2.0-only
// Copyright (C) 2015 - 2021 Christian Neumanns, email: chris@ppl-lang.dev

template fa_mutable_or_immutable_list_commands

	param size_factory

    functions native:yes

        function element_type
            java
                return t_element;
            end java
        .
        
        function size
            java
                return new fa_{size_factory} ( a_java_list.size() );
            end java
        .

        function iterator
            java
                return new fa_Java_Spliterator_wrapper_iterator_with_size<t_element> (
                    a_java_list.spliterator(), a_java_list.size(), t_element );
            end java
        .
    
        function stream
            java
                return new fa_stream<t_element> ( a_java_list.stream(), t_element );
            end java
        .
    .    

    function to_string = """List with {{size}} {{if size #v 1 then "elements" else "element" end if}}"""
    
    function to_long_string

        const r = mutable_string.create
        
        r.append ( "[" )

        repeat for each item in iterator is_last:is_last

            // r.append ( se_object.to_long_string_or_null_string ( item ) )
            r.append ( se_object.to_string_or_null_string ( item ) )

            if not is_last then
                r.append ( ", " )
            .
        .

        r.append ( "]" )

        return r.to_string
    .
.
