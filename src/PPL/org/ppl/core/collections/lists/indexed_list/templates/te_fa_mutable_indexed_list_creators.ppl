// SPDX-License-Identifier: GPL-2.0-only
// Copyright (C) 2015 - 2021 Christian Neumanns, email: chris@ppl-lang.dev

template fa_mutable_indexed_list_creators

    creator create -> mutable_indexed_list<t_element>

        java
            c_this.a_java_list = new ArrayList<t_element>();
        end java
        
        return this
    .

    creator create_singleton ( element t_element ) -> mutable_indexed_list<t_element>

        java
            ArrayList<t_element> list = new ArrayList<>();
            list.add ( i_element );
            c_this.a_java_list = list;
        end java
        
        return this
    .

    creator create_duo ( element_1 t_element, element_2 t_element ) -> mutable_indexed_list<t_element>

        java
            ArrayList<t_element> list = new ArrayList<>();
            list.add ( i_element_1 );
            list.add ( i_element_2 );
            c_this.a_java_list = list;
        end java
        
        return this
    .

    creator create_trio ( element_1 t_element, element_2 t_element, element_3 t_element ) -> mutable_indexed_list<t_element>

        java
            ArrayList<t_element> list = new ArrayList<>();
            list.add ( i_element_1 );
            list.add ( i_element_2 );
            list.add ( i_element_3 );
            c_this.a_java_list = list;
        end java
        
        return this
    .

    creator create_copy_from_immutable_list ( immutable_list indexed_list<t_element> ) -> mutable_indexed_list<t_element>

        java
            ArrayList<t_element> list = new ArrayList<>();
            c_this.a_java_list = list;
        end java

        repeat for each element in i_immutable_list
            java
                list.add ( c_element );
            end java
        .

        return this
    .
.
