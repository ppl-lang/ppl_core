// SPDX-License-Identifier: GPL-2.0-only
// Copyright (C) 2015 - 2021 Christian Neumanns, email: chris@ppl-lang.dev

service java_IO

	java_header
		import java.io.IOException;

		import java.io.InputStream;
		import java.io.OutputStream;

		import java.io.Reader;
		import java.io.Writer;

		import java.nio.channels.FileChannel;
		
		import org.ppl.core.IO.resource.ty_closable_IO_resource;
	end java_header

	java
		public static int default_IO_buffer_size = 8192;

		public static void close_input_stream ( InputStream input_stream ) {
			if ( input_stream != null ) {
				try {
					input_stream.close();
				} catch ( IOException e ) {}
			}
		}

		public static void close_output_stream ( OutputStream output_stream ) {
			if ( output_stream != null ) {
				try {
					output_stream.close();
				} catch ( IOException e ) {}
			}
		}

		public static void close_reader ( Reader reader ) {
			if ( reader != null ) {
				try {
					reader.close();
				} catch ( IOException e ) {}
			}
		}

		public static void close_writer ( Writer writer ) {
			if ( writer != null ) {
				try {
					writer.close();
				} catch ( IOException e ) {}
			}
		}

		public static void close_file_channel ( FileChannel channel ) {
			if ( channel != null ) {
				try {
					channel.close();
				} catch ( IOException e ) {}
			}
		}
		
		public static void close_resource ( ty_closable_IO_resource resource ) {
			if ( resource != null ) {
				try {
					resource.try_close();
				} catch ( Exception e ) {}
			}
		}
	end java

.
